{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ElementRef, ChangeDetectorRef, Component, Inject, Input, NgModule, Optional } from '@angular/core';\nconst _c0 = [\"*\"];\nclass Icons {\n  constructor(icons) {\n    this.icons = icons;\n  }\n}\nfunction uppercamelcase(str) {\n  return str.toLowerCase().replace(/(?:^\\w|[A-Z]|\\b\\w)/g, firstLetter => {\n    return firstLetter.toUpperCase();\n  }).replace(/[-_]/g, '');\n}\nlet FeatherComponent = /*#__PURE__*/(() => {\n  class FeatherComponent {\n    constructor(elem, changeDetector, icons) {\n      this.elem = elem;\n      this.changeDetector = changeDetector;\n      this.icons = icons;\n    }\n    ngOnChanges(changes) {\n      // icons are provided as an array of objects because of \"multi: true\"\n      const icons = Object.assign({}, ...this.icons);\n      const svg = icons[uppercamelcase(changes.name.currentValue)] || '';\n      if (!svg) {\n        console.warn(`Icon not found: ${changes.name.currentValue}\\n` + `Refer to documentation on https://github.com/michaelbazos/angular-feather`);\n      }\n      this.elem.nativeElement.innerHTML = svg;\n      this.changeDetector.markForCheck();\n    }\n  }\n  FeatherComponent.ɵfac = function FeatherComponent_Factory(t) {\n    return new (t || FeatherComponent)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(Icons));\n  };\n  FeatherComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FeatherComponent,\n    selectors: [[\"i-feather\"], [\"feather-icon\"]],\n    inputs: {\n      name: \"name\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function FeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\"]\n  });\n  return FeatherComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FeatherModule = /*#__PURE__*/(() => {\n  class FeatherModule {\n    constructor(icons) {\n      this.icons = icons;\n      if (!this.icons) {\n        throw new Error(`No icon provided. Make sure to use 'FeatherModule.pick({ ... })' when importing the module\\n` + `Refer to documentation on https://github.com/michaelbazos/angular-feather`);\n      }\n    }\n    static pick(icons) {\n      return {\n        ngModule: FeatherModule,\n        providers: [{\n          provide: Icons,\n          multi: true,\n          useValue: icons\n        }]\n      };\n    }\n  }\n  FeatherModule.ɵfac = function FeatherModule_Factory(t) {\n    return new (t || FeatherModule)(i0.ɵɵinject(Icons, 8));\n  };\n  FeatherModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FeatherModule\n  });\n  FeatherModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return FeatherModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of angular-feather\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FeatherComponent, FeatherModule };\n//# sourceMappingURL=angular-feather.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}